# 🌐 API-Server-Konfiguration (gilt für mediamtx_api.py)
api_server:
  redis:
    host: "localhost"
    port: 6379
    key: "mediamtx:streams:latest"     # Redis-Key, aus dem die API die Streamdaten liest
  static_dir: "/opt/mediamtx-monitoring-backend/static"  # Pfad zu HTML, JS, CSS
  index_file: "index.html"             # Startseite im static-Verzeichnis
  listen_host: "0.0.0.0"               # Host für Uvicorn/ASGI (optional, falls extern aufrufbar)
  listen_port: 8080                    # Port für den FastAPI-Server (optional, falls separat gestartet)

# 🌐 Basis-URL der MediaMTX API (normalerweise Port 9997)
api_base_url: "http://localhost:9997"

# 🧠 Redis-Konfiguration (global gültig für alle Module)
redis:
  host: "localhost"
  port: 6379

# 📝 Logging für alle Module in Redis
logging:
  level: "DEBUG"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
  
# 📦 Modul: Stream Collector (mediamtx_collector.py)
collector:
  redis_key: "mediamtx:streams:latest"
  output_json_path: "/tmp/mediamtx_streams.json"
  interval_seconds: 5

# 📸 Modul: Snapshots (mediamtx_snapshots.py)
snapshots:
  backend: "ffmpeg"                      # Nur dokumentativ
  protocol: "rtsp"                       # Stream-Protokoll für Snapshot-Quellen
  port: 8554                             # z. B. RTSP-Port von MediaMTX
  output_dir: "/opt/mediamtx-monitoring-backend/static/snapshots"
  width: 320
  height: 180
  interval: 10                           # Alle 10 Sekunden pro Stream ein Bild (wird durch snapshots.py gelesen)
  timeout_seconds: 0                     # kann bleiben – wird ggf. später von opencv-Backend genutzt
  max_threads: 0                         # nur dokumentativ (irrelevant für ffmpeg-Dauerprozesse)

# 💻 Modul: System Monitoring (mediamtx_system.py)
system_monitor:
  redis_key: "mediamtx:system:latest"
  output_json_path: "/tmp/mediamtx_system.json"
  interval_seconds: 10

# 🌍 Frontend-Parameter (wird nur vom Webserver verwendet)
frontend:
  snapshot_refresh_ms: 2000             # Browser lädt alle 2s neue Bilder
  streamlist_refresh_ms: 5000           # Stream-API wird alle 5s neu geladen
